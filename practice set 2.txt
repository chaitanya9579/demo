1.From the following table, write a SQL query to calculate total purchase amount of all orders.
 Return total purchase amount.

 select sum(purch_amt) as purch_amt from orders;
+--------------------+
| purch_amt          |
+--------------------+
| 17541.180145263672 |
+--------------------+

2.From the following table, write a SQL query to calculate the average purchase amount of all orders.
 Return average purchase amount. 

select avg(purch_amt) as purch_amt from orders;
+-------------------+
| purch_amt         |
+-------------------+
| 1461.765012105306 |
+-------------------+

3.From the following table, write a SQL query that counts the number of unique salespeople. 
Return number of salespeople. 

select count(distinct salesman_id) as salesman_id from orders;
+-------------+
| salesman_id |
+-------------+
|           6 |
+-------------+

4.From the following table, write a SQL query to find the maximum purchase amount.

select max(purch_amt) as purch_amt from orders;
+-----------+
| purch_amt |
+-----------+
|      5760 |
+-----------+

5.From the following table, write a SQL query to find the minimum purchase amount.

select min(purch_amt) as purch_amt from orders;
+-----------+
| purch_amt |
+-----------+
|     65.26 |
+-----------+

6.From the following table, write a SQL query to find the highest purchase amount ordered by each customer.
 Return customer ID, maximum purchase amount. 

select customer_id, max(purch_amt) AS purch_amt from orders group by customer_id;
+-------------+-----------+
| customer_id | purch_amt |
+-------------+-----------+
|        3005 |     948.5 |
|        3002 |      5760 |
|        3009 |    2480.4 |
|        3007 |    2400.6 |
|        3001 |    270.65 |
|        3004 |   1983.43 |
|        3003 |     75.29 |
|        3008 |    250.45 |
+-------------+-----------+

7.From the following table, write a SQL query to find the highest purchase amount ordered by each customer on a particular date. 
Return, order date and highest purchase amount. 

 select max(purch_amt),ord_date from orders group by ord_date;
+----------------+------------+
| max(purch_amt) | ord_date   |
+----------------+------------+
|          150.5 | 2012-10-05 |
|         2480.4 | 2012-10-10 |
|          110.5 | 2012-08-17 |
|         2400.6 | 2012-07-27 |
|           5760 | 2012-09-10 |
|         250.45 | 2012-06-27 |
|         3045.6 | 2012-04-25 |
+----------------+------------+

8.From the following table, write a SQL query to determine the highest purchase amount made by each salesperson on '2012-08-17'.
 Return salesperson ID, purchase amount 

mysql> select salesman_id, max(purch_amt) as purch_amt from orders where ord_date = '2012-08-17' group by salesman_id;
+-------------+-----------+
| salesman_id | purch_amt |
+-------------+-----------+
|        5002 |     110.5 |
|        5007 |     75.29 |
+-------------+-----------+
2 rows in set (0.01 sec)

9.From the following table, write a SQL query to find the highest order (purchase) amount by each customer on a particular order date.
 Filter the result by highest order (purchase) amount above 2000.00.
 Return customer id, order date and maximum purchase amount. 

select customer_id, ord_date, max(purch_amt) as purch_amt from orders group by customer_id, ord_date having max(purch_amt) > 2000.00;
+-------------+------------+-----------+
| customer_id | ord_date   | purch_amt |
+-------------+------------+-----------+
|        3009 | 2012-10-10 |    2480.4 |
|        3007 | 2012-07-27 |    2400.6 |
|        3002 | 2012-09-10 |      5760 |
|        3002 | 2012-04-25 |    3045.6 |
+-------------+------------+-----------+
4 rows in set (0.00 sec)

10.From the following table, write a SQL query to find the maximum order (purchase) amount in the range 2000 - 6000 (Begin and end values are included.)
 by combination of each customer and order date. 
Return customer id, order date and maximum purchase amount.

select customer_id, ord_date, max(purch_amt) as max_purch_amt from orders group by customer_id, ord_date having max(purch_amt) between 2000 and 6000;
+-------------+------------+---------------+
| customer_id | ord_date   | max_purch_amt |
+-------------+------------+---------------+
|        3009 | 2012-10-10 |        2480.4 |
|        3007 | 2012-07-27 |        2400.6 |
|        3002 | 2012-09-10 |          5760 |
|        3002 | 2012-04-25 |        3045.6 |
+-------------+------------+---------------+
4 rows in set (0.00 sec)

11.From the following table, write a SQL query to find the maximum order (purchase) amount based on the combination of each customer and order date. 
Filter the rows for maximum order (purchase) amount is either 2000, 3000, 5760, 6000.
 Return customer id, order date and maximum purchase amount.

select customer_id, ord_date, max(purch_amt) as max_purch_amt from orders group by customer_id, ord_date having max(purch_amt) in (2000, 3000, 5760, 6000);
+-------------+------------+---------------+
| customer_id | ord_date   | max_purch_amt |
+-------------+------------+---------------+
|        3002 | 2012-09-10 |          5760 |
+-------------+------------+---------------+
1 row in set (0.00 sec)

12.From the following table, write a SQL query to determine the maximum order amount for each customer.
 The customer ID should be in the range 3002 and 3007(Begin and end values are included.). 
Return customer id and maximum purchase amount.

select customer_id, max(purch_amt) as max_purch_amt from orders where customer_id between 3002 AND 3007 group by customer_id;
+-------------+---------------+
| customer_id | max_purch_amt |
+-------------+---------------+
|        3005 |         948.5 |
|        3002 |          5760 |
|        3007 |        2400.6 |
|        3004 |       1983.43 |
|        3003 |         75.29 |
+-------------+---------------+
5 rows in set (0.00 sec)

13.From the following table, write a SQL query to find the maximum order (purchase) amount for each customer.
 The customer ID should be in the range 3002 and 3007(Begin and end values are included.). 
Filter the rows for maximum order (purchase) amount is higher than 1000.
 Return customer id and maximum purchase amount. 

select customer_id, max(purch_amt) as max_purch_amt from orders where customer_id between 3002 and 3007 group by customer_id having max(purch_amt) > 1000;
+-------------+---------------+
| customer_id | max_purch_amt |
+-------------+---------------+
|        3002 |          5760 |
|        3007 |        2400.6 |
|        3004 |       1983.43 |
+-------------+---------------+
3 rows in set (0.00 sec)


14. From the following table, write a SQL query to determine the maximum order (purchase) amount generated by each salesperson.
 Filter the rows for the salesperson ID is in the range 5003 and 5008 (Begin and end values are included.).
 Return salesperson id and maximum purchase amount.

select salesman_id, max(purch_amt) as max_purch_amt from orders where salesman_id between 5003 and 5008 group by salesman_id;
+-------------+---------------+
| salesman_id | max_purch_amt |
+-------------+---------------+
|        5003 |        2480.4 |
|        5005 |         948.5 |
|        5006 |       1983.43 |
|        5007 |         75.29 |
+-------------+---------------+
4 rows in set (0.00 sec)


15.From the following table, write a SQL query to count all the orders generated on '2012-08-17'. 
Return number of orders. 

select count(*) as ord_no from orders where ord_date = '2012-08-17';
+--------+
| ord_no |
+--------+
|      2 |
+--------+
1 row in set (0.00 sec)

16.From the following table, write a SQL query to count the number of orders based on the combination of each order date and salesperson. 
Return order date, salesperson id.

select ord_date, salesman_id, count(*) as ord_no from orders group by ord_date, salesman_id;
+------------+-------------+--------+
| ord_date   | salesman_id | ord_no |
+------------+-------------+--------+
| 2012-10-05 |        5002 |      1 |
| 2012-10-05 |        5001 |      1 |
| 2012-10-10 |        5003 |      1 |
| 2012-08-17 |        5002 |      1 |
| 2012-07-27 |        5001 |      1 |
| 2012-09-10 |        5005 |      2 |
| 2012-09-10 |        5001 |      1 |
| 2012-10-10 |        5006 |      1 |
| 2012-08-17 |        5007 |      1 |
| 2012-06-27 |        5002 |      1 |
| 2012-04-25 |        5001 |      1 |
+------------+-------------+--------+
11 rows in set (0.00 sec)

17. Write a query to display the columns in a specific order,
 such as order date, salesman ID, order number, and purchase amount 
for all orders.

mysql> select ord_date, salesman_id, ord_no, purch_amt from orders;
+------------+-------------+--------+-----------+
| ord_date   | salesman_id | ord_no | purch_amt |
+------------+-------------+--------+-----------+
| 2012-10-05 |        5002 |  70001 |     150.5 |
| 2012-10-05 |        5001 |  70002 |     65.26 |
| 2012-10-10 |        5003 |  70003 |    2480.4 |
| 2012-08-17 |        5002 |  70004 |     110.5 |
| 2012-07-27 |        5001 |  70005 |    2400.6 |
| 2012-09-10 |        5005 |  70007 |     948.5 |
| 2012-09-10 |        5001 |  70008 |      5760 |
| 2012-09-10 |        5005 |  70009 |    270.65 |
| 2012-10-10 |        5006 |  70010 |   1983.43 |
| 2012-08-17 |        5007 |  70011 |     75.29 |
| 2012-06-27 |        5002 |  70012 |    250.45 |
| 2012-04-25 |        5001 |  70013 |    3045.6 |
+------------+-------------+--------+-----------+
12 rows in set (0.00 sec)



18. From the following table, write a SQL query to identify the unique salespeople ID.
 Return salesman_id. 

select distinct salesman_id from orders;
+-------------+
| salesman_id |
+-------------+
|        5002 |
|        5001 |
|        5003 |
|        5005 |
|        5006 |
|        5007 |
+-------------+
6 rows in set (0.00 sec)


19. From the following table, write a SQL query to find orders that are delivered by a salesperson with ID.
 5001. Return ord_no, ord_date, purch_amt.

select ord_no, ord_date, purch_amt from orders where salesman_id = 5001;
+--------+------------+-----------+
| ord_no | ord_date   | purch_amt |
+--------+------------+-----------+
|  70002 | 2012-10-05 |     65.26 |
|  70005 | 2012-07-27 |    2400.6 |
|  70008 | 2012-09-10 |      5760 |
|  70013 | 2012-04-25 |    3045.6 |
+--------+------------+-----------+
4 rows in set (0.00 sec)


20. From the following table, write a SQL query to find all the orders.
 Sort the result-set in ascending order by ord_no.
 Return all fields.

select * from orders order by ord_no asc;
+--------+-----------+------------+-------------+-------------+
| ord_no | purch_amt | ord_date   | customer_id | salesman_id |
+--------+-----------+------------+-------------+-------------+
|  70001 |     150.5 | 2012-10-05 |        3005 |        5002 |
|  70002 |     65.26 | 2012-10-05 |        3002 |        5001 |
|  70003 |    2480.4 | 2012-10-10 |        3009 |        5003 |
|  70004 |     110.5 | 2012-08-17 |        3009 |        5002 |
|  70005 |    2400.6 | 2012-07-27 |        3007 |        5001 |
|  70007 |     948.5 | 2012-09-10 |        3005 |        5005 |
|  70008 |      5760 | 2012-09-10 |        3002 |        5001 |
|  70009 |    270.65 | 2012-09-10 |        3001 |        5005 |
|  70010 |   1983.43 | 2012-10-10 |        3004 |        5006 |
|  70011 |     75.29 | 2012-08-17 |        3003 |        5007 |
|  70012 |    250.45 | 2012-06-27 |        3008 |        5002 |
|  70013 |    3045.6 | 2012-04-25 |        3002 |        5001 |
+--------+-----------+------------+-------------+-------------+
12 rows in set (0.00 sec)


21.From the following table, write a SQL query to find all the orders.
 Sort the result-set in descending order by ord_date.
 Return all fields.

select * from orders order by ord_date desc;
+--------+-----------+------------+-------------+-------------+
| ord_no | purch_amt | ord_date   | customer_id | salesman_id |
+--------+-----------+------------+-------------+-------------+
|  70003 |    2480.4 | 2012-10-10 |        3009 |        5003 |
|  70010 |   1983.43 | 2012-10-10 |        3004 |        5006 |
|  70001 |     150.5 | 2012-10-05 |        3005 |        5002 |
|  70002 |     65.26 | 2012-10-05 |        3002 |        5001 |
|  70007 |     948.5 | 2012-09-10 |        3005 |        5005 |
|  70008 |      5760 | 2012-09-10 |        3002 |        5001 |
|  70009 |    270.65 | 2012-09-10 |        3001 |        5005 |
|  70004 |     110.5 | 2012-08-17 |        3009 |        5002 |
|  70011 |     75.29 | 2012-08-17 |        3003 |        5007 |
|  70005 |    2400.6 | 2012-07-27 |        3007 |        5001 |
|  70012 |    250.45 | 2012-06-27 |        3008 |        5002 |
|  70013 |    3045.6 | 2012-04-25 |        3002 |        5001 |
+--------+-----------+------------+-------------+-------------+
12 rows in set (0.00 sec)


22.From the following table, write a SQL query to find all the orders.
 Sort the result-set in descending order by ord_date and purch_amt.
 Return all fields.,

select * from orders order by ord_date desc, purch_amt desc;
+--------+-----------+------------+-------------+-------------+
| ord_no | purch_amt | ord_date   | customer_id | salesman_id |
+--------+-----------+------------+-------------+-------------+
|  70003 |    2480.4 | 2012-10-10 |        3009 |        5003 |
|  70010 |   1983.43 | 2012-10-10 |        3004 |        5006 |
|  70001 |     150.5 | 2012-10-05 |        3005 |        5002 |
|  70002 |     65.26 | 2012-10-05 |        3002 |        5001 |
|  70008 |      5760 | 2012-09-10 |        3002 |        5001 |
|  70007 |     948.5 | 2012-09-10 |        3005 |        5005 |
|  70009 |    270.65 | 2012-09-10 |        3001 |        5005 |
|  70004 |     110.5 | 2012-08-17 |        3009 |        5002 |
|  70011 |     75.29 | 2012-08-17 |        3003 |        5007 |
|  70005 |    2400.6 | 2012-07-27 |        3007 |        5001 |
|  70012 |    250.45 | 2012-06-27 |        3008 |        5002 |
|  70013 |    3045.6 | 2012-04-25 |        3002 |        5001 |
+--------+-----------+------------+-------------+-------------+
12 rows in set (0.00 sec)

23.From the following table, write a SQL query that calculates the maximum purchase amount generated by each salesperson for each order date. 
Sort the result-set by salesperson id and order date in ascending order.
 Return salesperson id, order date and maximum purchase amount.

select salesman_id, ord_date, max(purch_amt) as max_purch_amt from orders group by salesman_id,order_date order by salesman_id asc, ord_date asc;
+-------------+------------+---------------+
| salesman_id | ord_date   | max_purch_amt |
+-------------+------------+---------------+
|        5001 | 2012-04-25 |        3045.6 |
|        5001 | 2012-07-27 |        2400.6 |
|        5001 | 2012-09-10 |          5760 |
|        5001 | 2012-10-05 |         65.26 |
|        5002 | 2012-06-27 |        250.45 |
|        5002 | 2012-08-17 |         110.5 |
|        5002 | 2012-10-05 |         150.5 |
|        5003 | 2012-10-10 |        2480.4 |
|        5005 | 2012-09-10 |         948.5 |
|        5006 | 2012-10-10 |       1983.43 |
|        5007 | 2012-08-17 |         75.29 |
+-------------+------------+---------------+
11 rows in set (0.00 sec)

24.From the following table, write a SQL query that counts the unique orders and 
the highest purchase amount for each customer. 
Sort the result-set in descending order on 2nd field. 
Return customer ID, number of distinct orders and 
highest purchase amount by each customer.  

select customer_id, count(distinct ord_no) as ord_no, max(purch_amt) as purch_amt from orders group by customer_id order by purch_amt desc;
+-------------+--------+-----------+
| customer_id | ord_no | purch_amt |
+-------------+--------+-----------+
|        3002 |      3 |      5760 |
|        3009 |      2 |    2480.4 |
|        3007 |      1 |    2400.6 |
|        3004 |      1 |   1983.43 |
|        3005 |      2 |     948.5 |
|        3001 |      1 |    270.65 |
|        3008 |      1 |    250.45 |
|        3003 |      1 |     75.29 |
+-------------+--------+-----------+
8 rows in set (0.01 sec)


25.From the following table, write a SQL query to calculate the 
summation of purchase amount, total commission (15% for all salespeople) 
by each order date. 
Sort the result-set on order date. 
Return order date, summation of purchase amount and commission.

select ord_date, sum(purch_amt) as purch_amt, sum(purch_amt * 0.15) as total_commission from orders group by ord_date order by ord_date;
+------------+--------------------+--------------------+
| ord_date   | purch_amt          | total_commission   |
+------------+--------------------+--------------------+
| 2012-04-25 |   3045.60009765625 |  456.8400146484375 |
| 2012-06-27 |  250.4499969482422 |  37.56749954223633 |
| 2012-07-27 |   2400.60009765625 |  360.0900146484375 |
| 2012-08-17 | 185.79000091552734 |   27.8685001373291 |
| 2012-09-10 |  6979.149993896484 | 1046.8724990844726 |
| 2012-10-05 | 215.76000213623047 |  32.36400032043457 |
| 2012-10-10 | 4463.8299560546875 |  669.5744934082031 |
+------------+--------------------+--------------------+
7 rows in set (0.00 sec)














